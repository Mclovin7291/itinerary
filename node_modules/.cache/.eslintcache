[{"C:\\Users\\drewm\\itinerary\\src\\index.js":"1","C:\\Users\\drewm\\itinerary\\src\\App.js":"2","C:\\Users\\drewm\\itinerary\\src\\reportWebVitals.js":"3","C:\\Users\\drewm\\itinerary\\src\\Pages\\Home.js":"4","C:\\Users\\drewm\\itinerary\\src\\Pages\\Survey.js":"5","C:\\Users\\drewm\\itinerary\\src\\Pages\\Itinerary.js":"6","C:\\Users\\drewm\\itinerary\\src\\Pages\\Maps.js":"7","C:\\Users\\drewm\\itinerary\\src\\Pages\\Login.js":"8","C:\\Users\\drewm\\itinerary\\src\\Pages\\Navbar.js":"9","C:\\Users\\drewm\\itinerary\\src\\config.js":"10"},{"size":538,"mtime":1736738670303,"results":"11","hashOfConfig":"12"},{"size":1170,"mtime":1736835340829,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1736738670303,"results":"14","hashOfConfig":"12"},{"size":897,"mtime":1736738825491,"results":"15","hashOfConfig":"12"},{"size":10593,"mtime":1736742825545,"results":"16","hashOfConfig":"12"},{"size":3026,"mtime":1736834312361,"results":"17","hashOfConfig":"12"},{"size":1713,"mtime":1736835487239,"results":"18","hashOfConfig":"12"},{"size":2024,"mtime":1736832514447,"results":"19","hashOfConfig":"12"},{"size":553,"mtime":1736827534894,"results":"20","hashOfConfig":"12"},{"size":1,"mtime":1736834185687,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"k7bvfb",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\drewm\\itinerary\\src\\index.js",[],[],["56"],"C:\\Users\\drewm\\itinerary\\src\\App.js",[],[],"C:\\Users\\drewm\\itinerary\\src\\reportWebVitals.js",[],[],"C:\\Users\\drewm\\itinerary\\src\\Pages\\Home.js",[],[],"C:\\Users\\drewm\\itinerary\\src\\Pages\\Survey.js",["57","58","59"],[],"import React, { useState } from 'react'\r\nimport './Styles/Survey.css'\r\nimport './Components/Button.css'\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst timeOptions = [\r\n    '6:00 AM', '6:30 AM', '7:00 AM', '7:30 AM', '8:00 AM', '8:30 AM', '9:00 AM', '9:30 AM',\r\n    '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM', '12:00 PM', '12:30 PM', '1:00 PM', '1:30 PM',\r\n    '2:00 PM', '2:30 PM', '3:00 PM', '3:30 PM', '4:00 PM', '4:30 PM', '5:00 PM', '5:30 PM',\r\n    '6:00 PM', '6:30 PM', '7:00 PM', '7:30 PM', '8:00 PM', '8:30 PM', '9:00 PM', '9:30 PM',\r\n    '10:00 PM', '10:30 PM', '11:00 PM', '11:30 PM'\r\n];\r\n\r\n// Add custom hooks for form handling\r\nconst useFormValidation = (initialState) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateField = (name, value) => {\r\n    switch(name) {\r\n      case 'zip':\r\n        return /^\\d{5}(-\\d{4})?$/.test(value) ? '' : 'Invalid ZIP code';\r\n      case 'state':\r\n        return /^[A-Z]{2}$/.test(value.toUpperCase()) ? '' : 'Use 2-letter state code';\r\n      // Add more validations\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues(prev => ({ ...prev, [name]: value }));\r\n    setErrors(prev => ({ ...prev, [name]: validateField(name, value) }));\r\n  };\r\n\r\n  return { values, errors, handleChange };\r\n};\r\n\r\n// Add state codes array\r\nconst stateOptions = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    // ... add all states\r\n];\r\n\r\nexport default function Survey() {\r\n    const [formData, setFormData] = useState({\r\n        address: '',\r\n        city: '',\r\n        state: '',\r\n        zip: '',\r\n        radius: '8047',  // Default to 5 miles\r\n        priceRange: '',\r\n        startTime: '09:00',\r\n        endTime: '22:00',\r\n        cuisine: '',\r\n        transportation: 'driving',\r\n        activityPreference: '',\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const encodedData = {\r\n            ...formData,\r\n            address: encodeURIComponent(formData.address.trim()),\r\n            city: encodeURIComponent(formData.city.trim()),\r\n            state: formData.state.trim().toUpperCase(),\r\n            zip: formData.zip.trim()\r\n        };\r\n        console.log('Submitting form with data:', encodedData);\r\n        navigate('/itinerary', { state: encodedData });\r\n    };\r\n\r\n    return (\r\n        <div className=\"survey-container\">\r\n            <h2 className=\"survey-title\">Plan Your Perfect Day!</h2>\r\n            <form onSubmit={handleSubmit} className=\"survey-form\">\r\n                {/* Location Section */}\r\n                <div className=\"form-section\">\r\n                    <h3>Where are you starting from?</h3>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        placeholder=\"Street Address\"\r\n                        value={formData.address}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                        className=\"form-input\"\r\n                    />\r\n                    <div className=\"form-row\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"city\"\r\n                            placeholder=\"City\"\r\n                            value={formData.city}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-input\"\r\n                        />\r\n                        <select\r\n                            name=\"state\"\r\n                            value={formData.state}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"\">State</option>\r\n                            <option value=\"GA\">Georgia</option>\r\n                            <option value=\"FL\">Florida</option>\r\n                            <option value=\"NC\">North Carolina</option>\r\n                            {/* Add more states as needed */}\r\n                        </select>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"zip\"\r\n                            placeholder=\"ZIP\"\r\n                            value={formData.zip}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-input\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Preferences Section */}\r\n                <div className=\"form-section\">\r\n                    <h3>What are your preferences?</h3>\r\n                    <div className=\"form-row\">\r\n                        <select\r\n                            name=\"priceRange\"\r\n                            value={formData.priceRange}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"\">Price Range</option>\r\n                            <option value=\"1\">$ (Under $15)</option>\r\n                            <option value=\"2\">$$ ($15-$30)</option>\r\n                            <option value=\"3\">$$$ ($31-$60)</option>\r\n                            <option value=\"4\">$$$$ (Above $60)</option>\r\n                        </select>\r\n\r\n                        <select\r\n                            name=\"radius\"\r\n                            value={formData.radius}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"1609\">Within 1 mile</option>\r\n                            <option value=\"8047\">Within 5 miles</option>\r\n                            <option value=\"16093\">Within 10 miles</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <select\r\n                            name=\"cuisine\"\r\n                            value={formData.cuisine}\r\n                            onChange={handleInputChange}\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"\">Preferred Cuisine</option>\r\n                            <option value=\"american\">American</option>\r\n                            <option value=\"italian\">Italian</option>\r\n                            <option value=\"chinese\">Chinese</option>\r\n                            <option value=\"mexican\">Mexican</option>\r\n                            <option value=\"japanese\">Japanese</option>\r\n                            <option value=\"indian\">Indian</option>\r\n                            <option value=\"thai\">Thai</option>\r\n                        </select>\r\n\r\n                        <select\r\n                            name=\"activityPreference\"\r\n                            value={formData.activityPreference}\r\n                            onChange={handleInputChange}\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"\">Preferred Activity</option>\r\n                            <option value=\"shopping\">Shopping</option>\r\n                            <option value=\"outdoor\">Outdoor Activities</option>\r\n                            <option value=\"museums\">Museums</option>\r\n                            <option value=\"entertainment\">Entertainment</option>\r\n                            <option value=\"sports\">Sports</option>\r\n                            <option value=\"spa\">Spa & Wellness</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <select\r\n                            name=\"transportation\"\r\n                            value={formData.transportation}\r\n                            onChange={handleInputChange}\r\n                            required\r\n                            className=\"form-select\"\r\n                        >\r\n                            <option value=\"driving\">Driving</option>\r\n                            <option value=\"walking\">Walking</option>\r\n                            <option value=\"bicycling\">Bicycling</option>\r\n                            <option value=\"transit\">Public Transit</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"time-input\">\r\n                            <label>Start Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                name=\"startTime\"\r\n                                value={formData.startTime}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                className=\"form-input\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"time-input\">\r\n                            <label>End Time:</label>\r\n                            <input\r\n                                type=\"time\"\r\n                                name=\"endTime\"\r\n                                value={formData.endTime}\r\n                                onChange={handleInputChange}\r\n                                required\r\n                                className=\"form-input\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-button\">\r\n                    Generate Itinerary\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}","C:\\Users\\drewm\\itinerary\\src\\Pages\\Itinerary.js",[],[],"C:\\Users\\drewm\\itinerary\\src\\Pages\\Maps.js",["60","61"],[],"import { GoogleMap, Marker, LoadScript, InfoWindow } from \"@react-google-maps/api\";\r\nimport { useState, useCallback } from \"react\";\r\nimport './Styles/Maps.css';\r\n\r\nfunction Maps() {\r\n  const [map, setMap] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [center, setCenter] = useState({\r\n    lat: 33.7531,\r\n    lng: -84.3853\r\n  });\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback() {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleMarkerClick = (place) => {\r\n    setSelectedPlace(place);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n      <GoogleMap\r\n        mapContainerClassName=\"map-container\"\r\n        center={center}\r\n        zoom={12}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n        options={{\r\n          zoomControl: true,\r\n          streetViewControl: true,\r\n          mapTypeControl: true,\r\n          fullscreenControl: true,\r\n        }}\r\n      >\r\n        <Marker\r\n          position={center}\r\n          draggable={true}\r\n          onDragEnd={(e) => {\r\n            setCenter({\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng()\r\n            });\r\n          }}\r\n        />\r\n        {selectedPlace && (\r\n          <InfoWindow\r\n            position={selectedPlace.position}\r\n            onCloseClick={() => setSelectedPlace(null)}\r\n          >\r\n            <div>\r\n              <h3>{selectedPlace.name}</h3>\r\n              <p>{selectedPlace.description}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default Maps;","C:\\Users\\drewm\\itinerary\\src\\Pages\\Login.js",["62","63"],[],"import React, { useEffect, useState } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport './Styles/Login.css';\r\n\r\nfunction Login() {\r\n  const [user, setUser] = useState({});\r\n  const [googleLoaded, setGoogleLoaded] = useState(false);\r\n\r\n  function handleCallBackResponse(response) {\r\n    console.log(\"Encoded JWT ID token: \" + response.credential);\r\n    var userObject = jwt_decode(response.credential);\r\n    setUser(userObject);\r\n    document.getElementById(\"signInDiv\").hidden = true;\r\n  }\r\n\r\n  function handleSignOut(event) {\r\n    setUser({});\r\n    document.getElementById(\"signInDiv\").hidden = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const loadGoogleScript = () => {\r\n      // Check if script is already loaded\r\n      if (!window.google || !window.google.accounts) {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://accounts.google.com/gsi/client';\r\n        script.async = true;\r\n        script.defer = true;\r\n        script.onload = () => {\r\n          if (window.google && window.google.accounts) {\r\n            window.google.accounts.id.initialize({\r\n              client_id: \"1005325099127-qdh6mv05e08eqtqhb6v4o31t0vb9m43d.apps.googleusercontent.com\",\r\n              callback: handleCallBackResponse\r\n            });\r\n            window.google.accounts.id.renderButton(\r\n              document.getElementById(\"signInDiv\"),\r\n              { theme: \"outline\", size: \"large\" }\r\n            );\r\n          }\r\n        };\r\n        document.body.appendChild(script);\r\n      }\r\n    };\r\n    loadGoogleScript();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div id=\"signInDiv\"></div>\r\n      {Object.keys(user).length !== 0 && (\r\n        <div className=\"user-info\">\r\n          <button onClick={handleSignOut} className=\"sign-out-button\">Sign Out</button>\r\n          {user.picture && <img src={user.picture} alt=\"profile\" className=\"profile-image\" />}\r\n          <h3>{user.name}</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","C:\\Users\\drewm\\itinerary\\src\\Pages\\Navbar.js",[],[],"C:\\Users\\drewm\\itinerary\\src\\config.js",[],[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":6,"column":7,"nodeType":"68","messageId":"69","endLine":6,"endColumn":18},{"ruleId":"66","severity":1,"message":"70","line":15,"column":7,"nodeType":"68","messageId":"69","endLine":15,"endColumn":24},{"ruleId":"66","severity":1,"message":"71","line":41,"column":7,"nodeType":"68","messageId":"69","endLine":41,"endColumn":19},{"ruleId":"66","severity":1,"message":"72","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":13},{"ruleId":"66","severity":1,"message":"73","line":21,"column":9,"nodeType":"68","messageId":"69","endLine":21,"endColumn":26},{"ruleId":"66","severity":1,"message":"74","line":7,"column":10,"nodeType":"68","messageId":"69","endLine":7,"endColumn":22},{"ruleId":"66","severity":1,"message":"75","line":7,"column":24,"nodeType":"68","messageId":"69","endLine":7,"endColumn":39},"no-new-object",["76"],"no-unused-vars","'timeOptions' is assigned a value but never used.","Identifier","unusedVar","'useFormValidation' is assigned a value but never used.","'stateOptions' is assigned a value but never used.","'map' is assigned a value but never used.","'handleMarkerClick' is assigned a value but never used.","'googleLoaded' is assigned a value but never used.","'setGoogleLoaded' is assigned a value but never used.","no-object-constructor"]