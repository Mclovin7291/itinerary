{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drewm\\\\itinerary\\\\src\\\\Pages\\\\Maps.js\",\n  _s = $RefreshSig$();\nimport { GoogleMap, Marker, LoadScript, InfoWindow } from \"@react-google-maps/api\";\nimport { useState, useCallback } from \"react\";\nimport './Styles/Maps.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Maps() {\n  _s();\n  const [map, setMap] = useState(null);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [center, setCenter] = useState({\n    lat: 33.7531,\n    lng: -84.3853\n  });\n  const onLoad = useCallback(function callback(map) {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback() {\n    setMap(null);\n  }, []);\n  const handleMarkerClick = place => {\n    setSelectedPlace(place);\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerClassName: \"map-container\",\n      center: center,\n      zoom: 12,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      options: {\n        zoomControl: true,\n        streetViewControl: true,\n        mapTypeControl: true,\n        fullscreenControl: true\n      },\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: center,\n        draggable: true,\n        onDragEnd: e => {\n          setCenter({\n            lat: e.latLng.lat(),\n            lng: e.latLng.lng()\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), selectedPlace && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: selectedPlace.position,\n        onCloseClick: () => setSelectedPlace(null),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedPlace.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Maps, \"ifInal5a2H1g/pBqB42nZgpPbS8=\");\n_c = Maps;\nexport default Maps;\nvar _c;\n$RefreshReg$(_c, \"Maps\");","map":{"version":3,"names":["GoogleMap","Marker","LoadScript","InfoWindow","useState","useCallback","jsxDEV","_jsxDEV","Maps","_s","map","setMap","selectedPlace","setSelectedPlace","center","setCenter","lat","lng","onLoad","callback","onUnmount","handleMarkerClick","place","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","children","mapContainerClassName","zoom","options","zoomControl","streetViewControl","mapTypeControl","fullscreenControl","position","draggable","onDragEnd","e","latLng","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","name","description","_c","$RefreshReg$"],"sources":["C:/Users/drewm/itinerary/src/Pages/Maps.js"],"sourcesContent":["import { GoogleMap, Marker, LoadScript, InfoWindow } from \"@react-google-maps/api\";\r\nimport { useState, useCallback } from \"react\";\r\nimport './Styles/Maps.css';\r\n\r\nfunction Maps() {\r\n  const [map, setMap] = useState(null);\r\n  const [selectedPlace, setSelectedPlace] = useState(null);\r\n  const [center, setCenter] = useState({\r\n    lat: 33.7531,\r\n    lng: -84.3853\r\n  });\r\n\r\n  const onLoad = useCallback(function callback(map) {\r\n    setMap(map);\r\n  }, []);\r\n\r\n  const onUnmount = useCallback(function callback() {\r\n    setMap(null);\r\n  }, []);\r\n\r\n  const handleMarkerClick = (place) => {\r\n    setSelectedPlace(place);\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n      <GoogleMap\r\n        mapContainerClassName=\"map-container\"\r\n        center={center}\r\n        zoom={12}\r\n        onLoad={onLoad}\r\n        onUnmount={onUnmount}\r\n        options={{\r\n          zoomControl: true,\r\n          streetViewControl: true,\r\n          mapTypeControl: true,\r\n          fullscreenControl: true,\r\n        }}\r\n      >\r\n        <Marker\r\n          position={center}\r\n          draggable={true}\r\n          onDragEnd={(e) => {\r\n            setCenter({\r\n              lat: e.latLng.lat(),\r\n              lng: e.latLng.lng()\r\n            });\r\n          }}\r\n        />\r\n        {selectedPlace && (\r\n          <InfoWindow\r\n            position={selectedPlace.position}\r\n            onCloseClick={() => setSelectedPlace(null)}\r\n          >\r\n            <div>\r\n              <h3>{selectedPlace.name}</h3>\r\n              <p>{selectedPlace.description}</p>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default Maps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}