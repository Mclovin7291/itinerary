{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drewm\\\\itinerary\\\\src\\\\Pages\\\\Itinerary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Styles/Itinerary.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Itinerary() {\n  _s();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const formData = location.state;\n  const generateTimeSlots = (startTime, endTime) => {\n    const slots = [];\n    const start = new Date(`2024/01/01 ${startTime}`);\n    const end = new Date(`2024/01/01 ${endTime}`);\n    let current = new Date(start);\n    while (current <= end) {\n      slots.push(current.toLocaleTimeString('en-US', {\n        hour: 'numeric',\n        minute: '2-digit',\n        hour12: true\n      }));\n      current.setMinutes(current.getMinutes() + 30);\n    }\n    return slots;\n  };\n  const timeSlots = formData ? generateTimeSlots(formData.startTime, formData.endTime) : [];\n  useEffect(() => {\n    const fetchItinerary = async () => {\n      if (!formData) return;\n      try {\n        console.log('Fetching with data:', formData);\n        const url = `/parameters/${formData.address}/${formData.city}/${formData.state}/${formData.zip}/${formData.radius}/${formData.priceRange}`;\n        console.log('Fetching from URL:', url);\n        const response = await fetch(url);\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Server responded with ${response.status}: ${errorText}`);\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (err) {\n        console.error('Fetch error:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchItinerary();\n  }, [formData]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading your itinerary...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 23\n  }, this);\n  if (!formData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"No survey data found. Please complete the survey first.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 27\n  }, this);\n  const TimeSlot = /*#__PURE__*/React.memo(({\n    time,\n    event\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-slot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: event || 'Free Time'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"itinerary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"itinerary-header\",\n      children: \"Your Daily Itinerary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: timeSlots.map(time => /*#__PURE__*/_jsxDEV(TimeSlot, {\n        time: time,\n        event: data[time] || 'Free Time'\n      }, time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Itinerary, \"Q0WO+wTkBMfDiKtNYnVbrA617Ks=\", false, function () {\n  return [useLocation];\n});\n_c = Itinerary;\nvar _c;\n$RefreshReg$(_c, \"Itinerary\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","jsxDEV","_jsxDEV","Itinerary","_s","data","setData","loading","setLoading","error","setError","location","formData","state","generateTimeSlots","startTime","endTime","slots","start","Date","end","current","push","toLocaleTimeString","hour","minute","hour12","setMinutes","getMinutes","timeSlots","fetchItinerary","console","log","url","address","city","zip","radius","priceRange","response","fetch","ok","errorText","text","Error","status","jsonData","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","TimeSlot","memo","time","event","map","_c","$RefreshReg$"],"sources":["C:/Users/drewm/itinerary/src/Pages/Itinerary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Styles/Itinerary.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nexport default function Itinerary() {\r\n    const [data, setData] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(null)\r\n    const location = useLocation()\r\n    const formData = location.state\r\n\r\n    const generateTimeSlots = (startTime, endTime) => {\r\n        const slots = [];\r\n        const start = new Date(`2024/01/01 ${startTime}`);\r\n        const end = new Date(`2024/01/01 ${endTime}`);\r\n        \r\n        let current = new Date(start);\r\n        while (current <= end) {\r\n            slots.push(current.toLocaleTimeString('en-US', {\r\n                hour: 'numeric',\r\n                minute: '2-digit',\r\n                hour12: true\r\n            }));\r\n            current.setMinutes(current.getMinutes() + 30);\r\n        }\r\n        return slots;\r\n    };\r\n\r\n    const timeSlots = formData ? generateTimeSlots(formData.startTime, formData.endTime) : [];\r\n\r\n    useEffect(() => {\r\n        const fetchItinerary = async () => {\r\n            if (!formData) return;\r\n            \r\n            try {\r\n                console.log('Fetching with data:', formData);\r\n                const url = `/parameters/${formData.address}/${formData.city}/${formData.state}/${formData.zip}/${formData.radius}/${formData.priceRange}`;\r\n                console.log('Fetching from URL:', url);\r\n                \r\n                const response = await fetch(url);\r\n                if (!response.ok) {\r\n                    const errorText = await response.text();\r\n                    throw new Error(`Server responded with ${response.status}: ${errorText}`);\r\n                }\r\n                const jsonData = await response.json();\r\n                setData(jsonData);\r\n            } catch (err) {\r\n                console.error('Fetch error:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchItinerary();\r\n    }, [formData]);\r\n\r\n    if (loading) return <div className=\"loading\">Loading your itinerary...</div>;\r\n    if (error) return <div className=\"error\">Error: {error}</div>;\r\n    if (!formData) return <div className=\"error\">No survey data found. Please complete the survey first.</div>;\r\n\r\n    const TimeSlot = React.memo(({ time, event }) => (\r\n        <div className=\"time-slot\">\r\n            <div className=\"time\">{time}</div>\r\n            <div className=\"event\">{event || 'Free Time'}</div>\r\n        </div>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"itinerary-container\">\r\n            <h1 className=\"itinerary-header\">Your Daily Itinerary</h1>\r\n            <div className=\"timeline\">\r\n                {timeSlots.map(time => (\r\n                    <TimeSlot key={time} time={time} event={data[time] || 'Free Time'} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}